/**
 * TESTE PRODU√á√ÉO: MODO HEADLESS (SEM INTERFACE)
 * 
 * Script para testar em modo produ√ß√£o sem abrir navegador
 */

const QueenBooksBotaoLoginSearcher = require('./QueenBooksBotaoLoginSearcher');

async function testarModoProducao() {
  console.log('üéØ TESTE: MODO PRODU√á√ÉO (HEADLESS)');
  console.log('=' .repeat(60));
  
  const searcher = new QueenBooksBotaoLoginSearcher({
    username: 'willamscss@outlook.com',
    password: '618536',
    headless: true,  // For√ßar modo headless
    debug: false     // Sem delays de debug
  });

  try {
    const startTime = Date.now();
    
    // Inicializar
    await searcher.init();
    console.log('üöÄ Browser inicializado em modo headless');
    
    // Testar com um produto
    const codigo = '211042617';
    
    console.log(`üß™ Testando busca para produto: ${codigo}`);
    
    const resultado = await searcher.buscarProdutoComPreco(codigo);
    
    const endTime = Date.now();
    const duration = ((endTime - startTime) / 1000).toFixed(2);
    
    console.log('\nüìä RESULTADO FINAL:');
    console.log('=' .repeat(40));
    console.log(JSON.stringify(resultado, null, 2));
    
    if (resultado.preco_autenticado) {
      console.log('\nüéâ SUCESSO! Pre√ßo extra√≠do em modo produ√ß√£o!');
      console.log(`üí∞ Pre√ßo: R$ ${resultado.preco_autenticado.toFixed(2).replace('.', ',')}`);
      console.log(`‚è±Ô∏è Tempo total: ${duration}s`);
    } else {
      console.log('\n‚ùå Pre√ßo n√£o encontrado');
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  } finally {
    await searcher.close();
    console.log('\n‚úÖ Teste de produ√ß√£o finalizado');
  }
}

// Executar teste
testarModoProducao().catch(console.error);
